/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Navarion (https://sketchfab.com/Navarion)
license: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
source: https://sketchfab.com/3d-models/free-macbook-pro-m3-b3c478ae65ce429c910da87c193cb411
title: FREE - Macbook Pro M3
*/

import React, { useLayoutEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei' 
import { useThree } from '@react-three/fiber'; 
import gsap from 'gsap';
import ScrollTrigger from 'gsap/ScrollTrigger'; 

gsap.registerPlugin(ScrollTrigger); 


export default function Model3(props) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/scene1.gltf')
  let camera = useThree(state => state.camera ) ; 

 


  useLayoutEffect (() => { 
    camera.position.set(0,2,6) ;
    // materials.Body.color.set("#9BB5CE");
    let t1 = gsap.timeline({ 
      scrollTrigger:{  
      trigger: "#Phone-model" , 
      start : "top+=200 top " , 
      endTrigger: "#Pric" , 
      end: "top top " , 
      scrub:true , 
      toggleActions: "play none none none"
      // markers: true ,

      }
    }) ; 

    t1.to(group.current.rotation , { y: Math.PI * 2, duration: 3 });
   
  
 } , [])
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <mesh geometry={nodes.YIQWIEmpwzXKNga.geometry} material={nodes.YIQWIEmpwzXKNga.material} />
          <mesh geometry={nodes.MLUBELWlKyduCPJ.geometry} material={nodes.MLUBELWlKyduCPJ.material} />
          <mesh geometry={nodes.pyGXtbRuyHzlLeb.geometry} material={materials.oowSJBdGgkjQYIM} />
          <mesh geometry={nodes.GvOwFLrWTuGoVYz.geometry} material={nodes.GvOwFLrWTuGoVYz.material} />
          <mesh geometry={nodes.BRcmOeeRzjDiXbZ.geometry} material={materials.ZiVQlSjqCcltQCJ} />
          <mesh geometry={nodes.pYASezxyPGyTvVM.geometry} material={materials.QWTijDAGbCwrOWg} />
          <mesh geometry={nodes.rKkhpRXoJCkklXs.geometry} material={materials.qkZOLUHiVYgMckg} />
          <mesh geometry={nodes.qjSRMkXvocsPboT.geometry} material={materials.hvBjBDBHERtlkxy} />
          <mesh geometry={nodes.GZRvSPNppBjJorn.geometry} material={materials.fVCKZnaMRlyopPL} />
          <mesh geometry={nodes.seUvIwDesGFJNcE.geometry} material={nodes.seUvIwDesGFJNcE.material} />
          <mesh geometry={nodes.LzqakmqpbXdgbVr.geometry} material={nodes.LzqakmqpbXdgbVr.material} />
          <mesh geometry={nodes.rZhxrtaanbUKXXT.geometry} material={materials.VoDYoGHenLMtHYN} />
          <mesh geometry={nodes.TmOTUhXtKEUrkPf.geometry} material={materials.FgXymxmBfJBhPlB} />
          <mesh geometry={nodes.ZSYJGWKkEUusioL.geometry} material={nodes.ZSYJGWKkEUusioL.material} />
          <mesh geometry={nodes.QfjbEpvLhKqajTB.geometry} material={nodes.QfjbEpvLhKqajTB.material} />
          <mesh geometry={nodes.oSAUeuNqVcXrGQg.geometry} material={nodes.oSAUeuNqVcXrGQg.material} />
          <mesh geometry={nodes.yYfHKqmacarkzlb.geometry} material={materials.lqJBugNJnTxrFNq} />
          <mesh geometry={nodes.rYmggbWaAoNvkWb.geometry} material={materials.lmkNrKQLQzPeiPo} />
          <mesh geometry={nodes.DzsUpYYoOIiYsUP.geometry} material={materials.fSdnqvHpIKeCQyV} />
          <mesh geometry={nodes.AmQTahkGkVfdLoV.geometry} material={materials.zlrKiEYuykraeAj} />
          <mesh geometry={nodes.pbcjkgIILSHRUPg.geometry} material={nodes.pbcjkgIILSHRUPg.material} />
          <mesh geometry={nodes.hOXcXlqYtezucxq.geometry} material={nodes.hOXcXlqYtezucxq.material} />
          <mesh geometry={nodes.HLklavDSMzGVgpv.geometry} material={materials.jrqhXBmqAJJvbba} />
          <mesh geometry={nodes.PQbepcKuJtVJvcO.geometry} material={materials.wsjsgEUyvhzwsFT} />
          <mesh geometry={nodes.nXFCVlKUPkwzMyX.geometry} material={materials.ManCKkRmKAhOkEC} />
          <mesh geometry={nodes.mTnboPjCuGNgXYw_0.geometry} material={nodes.mTnboPjCuGNgXYw_0.material} />
          <mesh geometry={nodes.MqjrPvmnBYdAzCv_0.geometry} material={materials.XKxFFtHkILdcigV} />
          <mesh geometry={nodes.MJCsCDYctXzJOrv_0.geometry} material={materials.LJXvFXkckZWZSAJ} />
          <mesh geometry={nodes.RmUlpDRcbYvxvMG.geometry} material={materials.qwkFSFQNMBwguPQ} />
          <mesh geometry={nodes.EOLaNwsnWHeUowg.geometry} material={materials.OyStturqsrbCyIN} />
          <mesh geometry={nodes.eogaOJZVOtgLTzk.geometry} material={nodes.eogaOJZVOtgLTzk.material} />
          <mesh geometry={nodes.oSkMufEEaEikrda.geometry} material={nodes.oSkMufEEaEikrda.material} />
          <mesh geometry={nodes.XIBxqEKdSHMvFxO.geometry} material={materials.VfkdCyLQUYSyjiY} />
          <mesh geometry={nodes.aWITVlDgwVQtoKH.geometry} material={nodes.aWITVlDgwVQtoKH.material} />
          <mesh geometry={nodes.TumtbkEqWoVcjVW.geometry} material={materials.PcASCxFQlsRQYBv} />
          <mesh geometry={nodes.tEKCZmhUgLIlmiW.geometry} material={materials.jiXyBrRnsQaOfPi} />
          <mesh geometry={nodes.XgTmruRSYPrTodJ.geometry} material={nodes.XgTmruRSYPrTodJ.material} />
          <mesh geometry={nodes.AbUSUIrCaeUDCsJ.geometry} material={materials.wgigXEahTjNNjwA} />
          <mesh geometry={nodes.ZKPKdYNcjUxVtCX.geometry} material={nodes.ZKPKdYNcjUxVtCX.material} />
          <mesh geometry={nodes.jzAbEcSYuyYzDTW.geometry} material={nodes.jzAbEcSYuyYzDTW.material} />
          <mesh geometry={nodes.AvyykvDoWBuLcEN.geometry} material={materials.ViHztBofDGslDJK} />
          <mesh geometry={nodes.DfdIaEUTFhXrCZh.geometry} material={materials.gXnYgKPeKcdKxGx} />
          <mesh geometry={nodes.TqcLBYEWEqrBeHf.geometry} material={materials.ewSGvlxhvDgapcl} />
          <mesh geometry={nodes.feRmjpVaeLEuLct.geometry} material={nodes.feRmjpVaeLEuLct.material} />
          <mesh geometry={nodes.OVleACBbjalqKNy.geometry} material={nodes.OVleACBbjalqKNy.material} />
          <mesh geometry={nodes.IOEnlSHZXYVoPvZ.geometry} material={materials.neWMvlnzbEhydxP} />
          <mesh geometry={nodes.MmNOFkillydkUUA.geometry} material={nodes.MmNOFkillydkUUA.material} />
          <mesh geometry={nodes.BZjmwPQQTPcmKaw.geometry} material={materials.RMZVuCquSSFOZvO} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/scene1.gltf')
